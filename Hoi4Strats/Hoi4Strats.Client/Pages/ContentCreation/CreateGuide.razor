@page "/CreateGuide"
@using Shared.DBModels
@using WYSIWYGTextEditor
@inject HttpClient client;
<h3>Create Guide</h3>
<RadzenStack>
    <RadzenLabel Text="Select Value" Component="DropDownChangeEvent" />
    <RadzenDropDown Value="@selectedGuide" TValue="string" Data="@Guides" Change="@(args => selectedGuide = $"{args}")" Style="width: 100%; max-width: 400px;" Name="DropDownChangeEvent"></RadzenDropDown>

    <RadzenStack Style="background-color:aliceblue">
    @if (selectedGuide != "Select Guide Type")
    {
        <TextEditor Toolbar="new Toolbar { ShowFullToolbar=true }" EditorContainerId="TestId" @ref="@MyEditor"
                    Placeholder="Enter non HTML format like centering...">
        </TextEditor>

        <RadzenButton Click="SubmitGuide">Submit for review</RadzenButton>
    }
    </RadzenStack>

</RadzenStack>

@code
{
    string selectedGuide = "Select Guide Type";
    TextEditor MyEditor = new();
    IEnumerable<string>? Guides;
    Lists lists = new();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Guides = lists.Guidetypes;
    }

    public async Task SubmitGuide()
    {
        var newGuide = new Guide
            {
                Id = 0,
                Title = selectedGuide,
                Content = await MyEditor.GetHTML(),
                Author = "Author Name",
                CreatedAt = DateTime.Now
            };

        var response = await client.PostAsJsonAsync("http://localhost:5118/api/guides", newGuide);

        if (response.IsSuccessStatusCode)
        {
            // Hantera framgång
            Console.WriteLine("We wrote to DB");
        }
        else
        {
            Console.WriteLine("This shit broke as fuck");
            // Hantera fel
        }
    }
}
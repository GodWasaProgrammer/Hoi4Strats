@using SharedProj
<h3>Template Guide Creator</h3>

@if (typeOfGuide == GuideTypes.LandTemplate)
{
    <RadzenStack>
        <RadzenLabel Text="Select Land Template type" />
        <RadzenDropDown TValue="LandTemplate"
                        Value="@landTemplate.ToString()"
                        Data="@Enum.GetNames(typeof(LandTemplate))"
                        Change="@(args => landTemplate = Enum.Parse<LandTemplate>(args.ToString()))"
                        Style="width: 100%; max-width: 400px;"
                        Name="LandTemplateDropdown" />
    </RadzenStack>
}

@if (typeOfGuide == GuideTypes.AirTemplate)
{
    <RadzenStack>
        <RadzenLabel Text="Select Land Template type" />
        <RadzenDropDown TValue="AirTemplate"
                        Value="@airTemplate.ToString()"
                        Data="@Enum.GetNames(typeof(AirTemplate))"
                        Change="@(args => airTemplate = Enum.Parse<AirTemplate>(args.ToString()))"
                        Style="width: 100%; max-width: 400px;"
                        Name="LandTemplateDropdown" />
    </RadzenStack>
}

@if (typeOfGuide == GuideTypes.NavalTemplate)
{
    <RadzenStack>
        <RadzenLabel Text="Select Naval Template type" />
        <RadzenDropDown TValue="NavalTemplate"
                        Value="@navalTemplate.ToString()"
                        Data="@Enum.GetNames(typeof(NavalTemplate))"
                        Change="@(args => navalTemplate = Enum.Parse<NavalTemplate>(args.ToString()))"
                        Style="width: 100%; max-width: 400px;"
                        Name="LandTemplateDropdown" />
    </RadzenStack>
}

@code 
{
    [Parameter]
    public GuideTypes typeOfGuide { get; set; }
    private LandTemplate landTemplate = LandTemplate.Infantry;
    private AirTemplate airTemplate = AirTemplate.Fighter;
    private NavalTemplate navalTemplate = NavalTemplate.Destroyer;
}

@implements IDisposable

@inject NavigationManager NavigationManager
@using Hoi4Strats.Client
@inject AuthenticationStateProvider prov
@inherits LayoutComponentBase
@using SharedProj
@layout MainLayout
<RadzenSidebar>
    <RadzenPanelMenu>
        <RadzenPanelMenuItem Path="/" Text="Home" Icon="home" />
        <RadzenPanelMenuItem Path="/Land" Text="Land">
            <RadzenPanelMenuItem Text="Templates">
                @foreach(var template in Enum.GetValues(typeof(LandTemplate)))
                {
                    <RadzenPanelMenuItem Path="/LandTemplates" Text="@template.ToString()"></RadzenPanelMenuItem>
                }
            </RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Battle Planning" />
        </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Path="/Sea" Text="Sea">
            <RadzenPanelMenuItem Text="Templates">
                @foreach(var template in Enum.GetValues(typeof(NavalTemplate)))
                {
                    <RadzenPanelMenuItem Text="@template.ToString()"></RadzenPanelMenuItem>
                }
            </RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Naval Superiority" />
        </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Path="Air" Text="Air">
            <RadzenPanelMenuItem Text="Templates">
                @foreach(var template in Enum.GetValues(typeof(AirTemplate)))
                {
                    <RadzenPanelMenuItem Text="@template.ToString()"></RadzenPanelMenuItem>
                }
            </RadzenPanelMenuItem>

            <RadzenPanelMenuItem Text="Air Superiority" />
        </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Path="Country" Text="Country">
            <RadzenPanelMenuItem Text="Majors">
                @foreach (var major in Enum.GetValues(typeof(Majors)))
                {
                    <RadzenPanelMenuItem Text="@major.ToString()" />
                }
            </RadzenPanelMenuItem>
            <RadzenPanelMenuItem Text="Minors">
                @foreach(var minor in Enum.GetValues(typeof(Minors)))
                {
                    <RadzenPanelMenuItem Text="@minor.ToString()"/>
                }
            </RadzenPanelMenuItem>
        </RadzenPanelMenuItem>
        <RadzenPanelMenuItem Path="/Forum" Text="Forum" />
    </RadzenPanelMenu>
    <Hoi4Strats.Client.Pages.ExtNewsFeed />
</RadzenSidebar>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private bool IsAdmin { get; set; }
    private bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        var authState = await prov.GetAuthenticationStateAsync();
        IsAdmin = authState.User.IsInRole("Admin");
        Console.WriteLine(IsAdmin);
        IsLoading = false;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}